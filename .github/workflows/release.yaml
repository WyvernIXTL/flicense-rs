name: Release

permissions:
  contents: write

on:
  release:
    types: [published]

jobs:
  compile-and-upload:
    continue-on-error: true
    strategy:
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
            rustflags: ""
            cargoargs: "-F mimalloc"
          - target: x86_64-apple-darwin
            os: macos-latest
            rustflags: "-C target-cpu=x86-64-v3"
            cargoargs: "-F mimalloc"
          - target: i686-pc-windows-msvc
            os: windows-latest
            rustflags: "-C target-cpu=x86-64-v3"
            cargoargs: "-F mimalloc"
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            rustflags: "-C target-cpu=x86-64-v3"
            cargoargs: "-F mimalloc"
          - target: aarch64-pc-windows-msvc
            os: windows-latest
            rustflags: ""
            cargoargs: "-F mimalloc"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Target
        run: rustup target add ${{ matrix.target }}
      - name: Build Cache
        uses: Swatinem/rust-cache@v2
      - name: Compile
        env:
          RUSTFLAGS: ${{ matrix.rustflags }}
        run: cargo build --profile optimized-release --target ${{ matrix.target }} ${{ matrix.cargoargs }}
      - name: Zip Binary (windows)
        if: runner.os == 'Windows'
        run: | 
          7z a flicense-${{ github.ref_name }}-${{ matrix.target }}.7z ./target/${{ matrix.target }}/optimized-release/flicense.exe ./README.md
          7z a flicense-${{ github.ref_name }}-${{ matrix.target }}.zip ./target/${{ matrix.target }}/optimized-release/flicense.exe ./README.md
      - name: Tar Binary (linux/mac)
        if: runner.os != 'Windows'
        run: tar -cJf flicense-${{ github.ref_name }}-${{ matrix.target }}.txz ./target/${{ matrix.target }}/optimized-release/flicense ./README.md
      - name: Upload Binary
        uses: softprops/action-gh-release@v2
        with:
          files: |
            flicense*.txz
            flicense*.zip
            flicense*.7z

  compile-and-upload-cross:
    continue-on-error: true
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            rustflags: ""
            cargoargs: "-F mimalloc"
          - target: i686-unknown-linux-musl
            os: ubuntu-latest
            rustflags: "-C target-cpu=x86-64-v3"
            cargoargs: "-F mimalloc"
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            rustflags: "-C target-cpu=x86-64-v3"
            cargoargs: "-F mimalloc"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Cargo Binstall
        uses: cargo-bins/cargo-binstall@main
      - name: Install Cross
        run: cargo binstall -y cross
      - name: Compile
        env:
          RUSTFLAGS: ${{ matrix.rustflags }}
        run: cross build --profile optimized-release --target ${{ matrix.target }} ${{ matrix.cargoargs }}
      - name: Tar Binary
        run: tar -cJf flicense-${{ github.ref_name }}-${{ matrix.target }}.txz ./target/${{ matrix.target }}/optimized-release/flicense ./README.md
      - name: Upload Binary
        uses: softprops/action-gh-release@v2
        with:
          files: |
            flicense*.txz

